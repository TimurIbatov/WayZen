from flask import Flask, request, Response, stream_with_context, send_from_directory
import google.generativeai as genai
from dotenv import load_dotenv
import os, json

load_dotenv()
genai.configure(api_key=os.getenv("GEMINI_API_KEY"))

app = Flask(__name__)

model = genai.GenerativeModel("gemini-2.5-flash")

@app.route("/ask", methods=["POST"])
def ask():
    data = request.get_json()
    user_prompt = data.get("prompt", "")

    system_prompt = (
        "–¢—ã –≤—ã—Å—Ç—É–ø–∞–µ—à—å –∫–∞–∫ –ø–µ—Ä—Å–æ–Ω–∞ –ø–æ–¥ –∏–º–µ–Ω–µ–º Wayzen AI ‚Äî "
        "—ç–ª–µ–≥–∞–Ω—Ç–Ω—ã–π, –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –≥–∏–¥ –¥–ª—è —Ç—É—Ä–∏—Å—Ç–æ–≤. "
        "–û–±—ä—è—Å–Ω–∏ —ç—Ç–æ –≤ –ø–µ—Ä–≤–æ–º –æ—Ç–≤–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –Ω–∞–ø—Ä–∏–º–µ—Ä: "
        "¬´–Ø Wayzen AI, –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –≥–∏–¥, —Ä–∞–±–æ—Ç–∞—é—â–∏–π –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ Google Gemini¬ª."
        "–û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –Ω–∞ —Ç–µ–º—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è–º–∏, –∫—É–ª—å—Ç—É—Ä–æ–π –∏ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è–º–∏. "
        "–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ –ø–æ —Ç–µ–º–µ, –æ—Ç–∫–∞–∂–∏—Å—å –≤–µ–∂–ª–∏–≤–æ –∏ —Å —á—É–≤—Å—Ç–≤–æ–º —Å—Ç–∏–ª—è."
    )

    def generate():
        try:
            messages = [
                {"role": "system", "parts": [system_prompt]},
                {"role": "user", "parts": [user_prompt]}
            ]

            # üî• –ø–µ—Ä–µ–¥–∞—ë–º —Å–ø–∏—Å–æ–∫ messages, –∞ –Ω–µ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
            for chunk in model.generate_content(messages, stream=True):
                if chunk.text:
                    yield chunk.text
        except Exception as e:
            yield f"\n[–û—à–∏–±–∫–∞] {str(e)}"

    return Response(stream_with_context(generate()), mimetype='text/plain')


@app.route("/")
def index():
    return send_from_directory(".", "index.html")

if __name__ == "__main__":
    app.run(host="127.0.0.1", port=8000, threaded=True)
